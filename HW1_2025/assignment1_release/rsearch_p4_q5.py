import json
import os
from pathlib import Path
import random


"""
Running random search iteration 0 with batch_size=128, lr=0.00033364309013757585, optimizer=adam...
Running random search iteration 1 with batch_size=256, lr=0.00046347111922728556, optimizer=adamw...
Running random search iteration 2 with batch_size=16, lr=0.0005655213128456853, optimizer=adam...
Running random search iteration 3 with batch_size=128, lr=0.000660713276165804, optimizer=adam...
Running random search iteration 4 with batch_size=256, lr=0.00024294594732585648, optimizer=adamw...
Running random search iteration 5 with batch_size=64, lr=0.0003216225086702893, optimizer=momentum...
Running random search iteration 6 with batch_size=64, lr=0.0009517890264504377, optimizer=momentum...
Running random search iteration 7 with batch_size=16, lr=0.0002733962991024981, optimizer=adam...
Running random search iteration 8 with batch_size=128, lr=0.0006680300865647153, optimizer=momentum...
Running random search iteration 9 with batch_size=16, lr=0.000969335458342981, optimizer=adam...
Running random search iteration 10 with batch_size=16, lr=0.0007638913579177133, optimizer=momentum...
Running random search iteration 11 with batch_size=32, lr=0.00022783993148269268, optimizer=adamw...
Running random search iteration 12 with batch_size=16, lr=0.0006279885514646184, optimizer=momentum...
Running random search iteration 13 with batch_size=256, lr=0.00028538959765841423, optimizer=momentum...
Running random search iteration 14 with batch_size=64, lr=0.000950892807279099, optimizer=adam...
Running random search iteration 15 with batch_size=256, lr=0.0005726284846538328, optimizer=adamw...
Running random search iteration 16 with batch_size=16, lr=0.0002204357090388442, optimizer=adamw...
Running random search iteration 17 with batch_size=128, lr=0.0005055220149808149, optimizer=momentum...
Running random search iteration 18 with batch_size=32, lr=0.0008600097810467648, optimizer=adam...
Running random search iteration 19 with batch_size=16, lr=0.0005177118024416422, optimizer=adam...
Running random search iteration 20 with batch_size=32, lr=0.000508281887130489, optimizer=adam...
Running random search iteration 21 with batch_size=256, lr=0.0006172009328854438, optimizer=adam...
Running random search iteration 22 with batch_size=16, lr=0.0003135857350607824, optimizer=adamw...
Running random search iteration 23 with batch_size=16, lr=0.0005638625558904371, optimizer=adamw...
Running random search iteration 24 with batch_size=64, lr=0.0004877226563987129, optimizer=momentum...
Running random search iteration 25 with batch_size=256, lr=0.000830835607560727, optimizer=adamw...
Running random search iteration 26 with batch_size=128, lr=0.0005585767125691754, optimizer=adamw...
Running random search iteration 27 with batch_size=64, lr=0.00017624738956503985, optimizer=adamw...
Running random search iteration 28 with batch_size=128, lr=0.0005379989101814491, optimizer=adamw...
Running random search iteration 29 with batch_size=16, lr=0.0007440258044266995, optimizer=momentum...
Running random search iteration 30 with batch_size=32, lr=0.0002623446775282906, optimizer=momentum...
Running random search iteration 31 with batch_size=256, lr=0.0007435045732876101, optimizer=adamw...
Running random search iteration 32 with batch_size=256, lr=0.0009099614920822451, optimizer=adam...
Running random search iteration 33 with batch_size=64, lr=7.734744438236206e-05, optimizer=adam...
Running random search iteration 34 with batch_size=128, lr=0.0007886756531625247, optimizer=momentum...
Running random search iteration 35 with batch_size=16, lr=0.000873979871751187, optimizer=adamw...
Running random search iteration 36 with batch_size=16, lr=0.0006792873564137588, optimizer=adam...
Running random search iteration 37 with batch_size=128, lr=0.0007055119052487934, optimizer=adam...
Running random search iteration 38 with batch_size=16, lr=0.0009917370634544079, optimizer=momentum...
Running random search iteration 39 with batch_size=256, lr=0.0005799630592660968, optimizer=adam...
Best run: 6, with best checkpoint validation accuracy: 0.9912974683544294 and test accuracy: 0.8866441082802559
"""

if __name__ == "__main__":
    output_dir = 'output/p4_q5'
    Path(output_dir).mkdir(exist_ok=True, parents=True)

    n_runs_random_search = 40

    batch_size_list = [4, 5, 6, 7, 8]
    lr_min, lr_max = 5e-5, 1e-3
    max_epochs = 100
    optimizer_list = ["adam", "adamw", "momentum"]

    patience = 10

    best_run_id = None
    best_run_test_acc = 0
    best_run_valid_acc = 0

    for i in range(n_runs_random_search):
        batch_size = 2 ** random.choice(batch_size_list)
        lr = random.uniform(lr_min, lr_max)
        optimizer = random.choice(optimizer_list)

        print(f"Running random search iteration {i} with batch_size={batch_size}, lr={lr}, optimizer={optimizer}...")

        run_logdir = f"{output_dir}/run_{i}"
        command = f"python main.py --model resnet18 --model_config ./model_configs/resnet18.json --batch_size {batch_size} --lr {lr} --optimizer {optimizer} --epochs {max_epochs} --patience {patience} --logdir {run_logdir} > {output_dir}/log.txt 2>&1"
        os.system(command)

        # load results.json in logdir
        run_results = json.load(open(Path(run_logdir) / 'results.json', 'r'))
        test_acc = run_results['test_acc']
        best_valid_acc = max(run_results['valid_accs'])

        if best_valid_acc > best_run_valid_acc:
            best_run_valid_acc = best_valid_acc
            best_run_test_acc = test_acc
            best_run_id = i

        run_results['batch_size'] = batch_size
        run_results['lr'] = lr
        run_results['optimizer'] = optimizer
        run_results['patience'] = patience
        run_results['max_epochs'] = max_epochs
        with open(Path(run_logdir) / 'results.json', 'w') as f:
            f.write(json.dumps(run_results, indent=4))

    print(f"Best run: {best_run_id}, with best checkpoint validation accuracy: {best_run_valid_acc} and test accuracy: {best_run_test_acc}")
